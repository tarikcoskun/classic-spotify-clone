@use "@/styles/colors" as c;
@use "@/styles/util";
@use "sass:color";

.sidebar {
  flex-shrink: 0;
  height: 100%;
  display: flex;
  flex-direction: column;
  width: var(--left-sidebar-width);
  background: linear-gradient(
    130deg,
    color.adjust(c.$layer2, $lightness: -2),
    color.adjust(c.$layer1, $lightness: -2),
    color.adjust(c.$layer2, $lightness: -4)
  );

  .sidebarLinks {
    --padding-x: var(--size-6);
    padding-block: var(--size-6);
    display: flex;
    flex-direction: column;
    gap: var(--size-8);
    overflow-y: auto;

    .sidebarCategory {
      .categoryHeader {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-inline: var(--padding-x);

        .categoryTitle {
          color: c.$subtext;
          font-weight: 500;
          font-size: var(--scale-00);
        }
      }

      .categoryLinks {
        margin-top: var(--size-2);

        .sidebarItem {
          cursor: pointer;
          position: relative;
          display: flex;
          gap: var(--size-5);
          align-items: center;
          padding: var(--size-2) var(--padding-x);

          .itemIcon {
            flex-shrink: 0;
            color: c.$title;
          }

          .itemLabel {
            @include util.truncate;
          }

          &:hover {
            .itemLabel {
              color: c.$title;
            }
          }

          &[data-state="active"] {
            &::before {
              content: "";
              width: 6px;
              height: 6px;
              border-radius: var(--radius-full);
              position: absolute;
              top: 50%;
              left: calc(var(--padding-x) / 2);
              transform: translate(-50%, -50%);
              background-color: c.$brand;
            }

            .itemLabel {
              color: c.$brand;
            }
          }
        }
      }
    }
  }

  .nowPlaying {
    height: 64px;
    flex-shrink: 0;
    margin-top: auto;
    display: flex;
    position: relative;
    transition: height 300ms;
    background: linear-gradient(
      to bottom right,
      color.adjust(c.$layer2, $lightness: -3),
      color.adjust(c.$layer2, $lightness: -2)
    );

    &[data-expanded="true"] {
      flex-direction: column;
      height: calc(64px + var(--left-sidebar-width));

      .albumCover {
        transform: translateY(-64px);
        width: var(--left-sidebar-width);
        height: var(--left-sidebar-width);
      }

      .flexGroup {
        width: 300px;
      }
    }

    .albumCover {
      width: 64px;
      height: 64px;
      flex-shrink: 0;
      background-size: cover;
      padding: var(--size-1);
      position: absolute;
      bottom: 0;
      transition-duration: 300ms;
      transition-property: width, height, transform;

      &:hover .expand {
        display: flex;
      }

      .expand {
        margin-left: auto;
        color: c.$title;
        background-color: color.adjust(c.$layer1, $alpha: -0.5);
        padding: var(--size-1);
        border-radius: var(--radius-full);
        display: none;

        &:hover {
          background-color: c.$layer1;
        }
      }
    }

    .flexGroup {
      width: calc(var(--left-sidebar-width) - 64px);
      height: 64px;
      margin-top: auto;
      margin-left: auto;
      padding: var(--size-4);
      gap: var(--size-4);
      display: flex;
      align-items: center;
      justify-content: space-between;
      min-width: 0;
      transition: width 300ms;

      .trackDetails {
        min-width: 0;

        .title {
          color: c.$title;
          font-size: var(--scale-00);
          @include util.truncate;
        }

        .artist {
          margin-top: var(--size-1);
          font-size: var(--scale-000);
          @include util.truncate;
        }
      }
    }
  }
}

.add {
  cursor: pointer;
  padding: var(--size-1);
  border-radius: var(--radius-full);
  color: c.$title;
  background-color: c.$layer1;
  flex-shrink: 0;

  &:hover {
    background-color: c.$layer3;
  }
}
