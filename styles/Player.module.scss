@use "colors" as c;
@use "sass:color";

.player {
  display: flex;
  gap: var(--size-8);
  align-items: center;
  background-color: c.$layer2;
  padding: var(--size-3) var(--size-4);

  .controlsLeft {
    display: flex;
    gap: var(--size-1);

    button {
      color: c.$title;
      cursor: pointer;
      padding: 6px;
      border-radius: var(--radius-full);
      background-color: transparent;

      &[aria-label="Play"],
      &[aria-label="Pause"] {
        background-color: c.$layer3;

        &:hover {
          background-color: color.adjust(c.$layer3, $lightness: 10);
        }
      }

      &:hover {
        color: c.$title;
        background-color: c.$layer3;
      }
    }
  }

  .volume {
    display: flex;
    align-items: center;
    gap: var(--size-4);
    height: 32px;

    .volumeProgress {
      width: 96px;
    }
  }

  .playback {
    flex-grow: 1;
    display: flex;
    align-items: center;
    gap: var(--size-4);

    .time {
      color: c.$title;
      font-size: var(--scale-00);
    }

    .playbackProgress {
      width: 100%;

      .current {
        background-color: c.$brand;
      }
    }
  }

  .controlsRight {
    display: flex;
    align-items: center;
    gap: var(--size-4);
  }
}

.progressBarWrapper {
  width: 100%;
  height: 12px;
  display: flex;
  align-items: center;
  position: relative;

  .dot {
    width: 12px;
    height: 12px;
    background-color: white;
    border-radius: var(--radius-full);
    position: absolute;
    top: 50%;
    left: var(--progress-bar-transform);
    transform: translateY(-50%);
    margin-left: -6px;
    z-index: 10;

    &[aria-pressed="true"]::after {
      content: "";
      width: 8px;
      height: 8px;
      position: absolute;
      left: 2px;
      top: 2px;
      box-shadow: inset 1px 1px 3px 2px rgba(0, 0, 0, 0.25);
      border-radius: var(--radius-full);
    }
  }

  .progressBar {
    width: 100%;
    height: 4px;
    border-radius: 2px;
    background-color: c.$layer1;
    overflow: hidden;

    .current {
      width: 100%;
      height: inherit;
      border-radius: inherit;
      background-color: c.$subtext;
      transform: translateX(calc(-100% + var(--progress-bar-transform)));
    }
  }
}
